'------------------------------------------------------------------------------
' <auto-generated>
'    This code was generated from a template.
'
'    Manual changes to this file may cause unexpected behavior in your application.
'    Manual changes to this file will be overwritten if the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------


Imports Microsoft.VisualBasic
Imports System
Imports System.Data.Objects
Imports System.Data.Objects.DataClasses
Imports System.Data.EntityClient
Imports System.ComponentModel
Imports System.Xml.Serialization
Imports System.Runtime.Serialization

<Assembly: EdmSchemaAttribute()>

Namespace SLGrid.Web
	#Region "Contexts"

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	Partial Public Class NORTHWNDEntities
		Inherits ObjectContext
		#Region "Constructors"

		''' <summary>
		''' Initializes a new NORTHWNDEntities object using the connection string found in the 'NORTHWNDEntities' section of the application configuration file.
		''' </summary>
		Public Sub New()
			MyBase.New("name=NORTHWNDEntities", "NORTHWNDEntities")
			Me.ContextOptions.LazyLoadingEnabled = True
			OnContextCreated()
		End Sub

		''' <summary>
		''' Initialize a new NORTHWNDEntities object.
		''' </summary>
		Public Sub New(ByVal connectionString As String)
			MyBase.New(connectionString, "NORTHWNDEntities")
			Me.ContextOptions.LazyLoadingEnabled = True
			OnContextCreated()
		End Sub

		''' <summary>
		''' Initialize a new NORTHWNDEntities object.
		''' </summary>
		Public Sub New(ByVal connection As EntityConnection)
			MyBase.New(connection, "NORTHWNDEntities")
			Me.ContextOptions.LazyLoadingEnabled = True
			OnContextCreated()
		End Sub

		#End Region

		#Region "Partial Methods"

		Partial Private Sub OnContextCreated()
		End Sub

		#End Region

		#Region "ObjectSet Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		Public ReadOnly Property CustomerOrders() As ObjectSet(Of CustomerOrders)
			Get
				If (_CustomerOrders Is Nothing) Then
					_CustomerOrders = MyBase.CreateObjectSet(Of CustomerOrders)("CustomerOrders")
				End If
				Return _CustomerOrders
			End Get
		End Property
		Private _CustomerOrders As ObjectSet(Of CustomerOrders)

		#End Region
		#Region "AddTo Methods"

		''' <summary>
		''' Deprecated Method for adding a new object to the CustomerOrders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
		''' </summary>
		Public Sub AddToCustomerOrders(ByVal customerOrders As CustomerOrders)
			MyBase.AddObject("CustomerOrders", customerOrders)
		End Sub

		#End Region
	End Class


	#End Region

	#Region "Entities"

	''' <summary>
	''' No Metadata Documentation available.
	''' </summary>
	<EdmEntityTypeAttribute(NamespaceName:="NORTHWNDModel", Name:="CustomerOrders"), Serializable(), DataContractAttribute(IsReference:=True)> _
	Partial Public Class CustomerOrders
		Inherits EntityObject
		#Region "Factory Method"

		''' <summary>
		''' Create a new CustomerOrders object.
		''' </summary>
		''' <param name="orderID">Initial value of the OrderID property.</param>
		''' <param name="companyName">Initial value of the CompanyName property.</param>
		Public Shared Function CreateCustomerOrders(ByVal orderID As Global.System.Int32, ByVal companyName As Global.System.String) As CustomerOrders
			Dim customerOrders As New CustomerOrders()
			customerOrders.OrderID = orderID
			customerOrders.CompanyName = companyName
			Return customerOrders
		End Function

		#End Region
		#Region "Primitive Properties"

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property OrderID() As Global.System.Int32
			Get
				Return _OrderID
			End Get
			Set(ByVal value As System.Int32)
				If _OrderID <> value Then
					OnOrderIDChanging(value)
					ReportPropertyChanging("OrderID")
					_OrderID = StructuralObject.SetValidValue(value)
					ReportPropertyChanged("OrderID")
					OnOrderIDChanged()
				End If
			End Set
		End Property
		Private _OrderID As Global.System.Int32
		Partial Private Sub OnOrderIDChanging(ByVal value As Global.System.Int32)
		End Sub
		Partial Private Sub OnOrderIDChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=True, IsNullable:=False), DataMemberAttribute()> _
		Public Property CompanyName() As Global.System.String
			Get
				Return _CompanyName
			End Get
			Set(ByVal value As System.String)
				If _CompanyName <> value Then
					OnCompanyNameChanging(value)
					ReportPropertyChanging("CompanyName")
					_CompanyName = StructuralObject.SetValidValue(value, False)
					ReportPropertyChanged("CompanyName")
					OnCompanyNameChanged()
				End If
			End Set
		End Property
		Private _CompanyName As Global.System.String
		Partial Private Sub OnCompanyNameChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnCompanyNameChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property ContactName() As Global.System.String
			Get
				Return _ContactName
			End Get
			Set(ByVal value As System.String)
				OnContactNameChanging(value)
				ReportPropertyChanging("ContactName")
				_ContactName = StructuralObject.SetValidValue(value, True)
				ReportPropertyChanged("ContactName")
				OnContactNameChanged()
			End Set
		End Property
		Private _ContactName As Global.System.String
		Partial Private Sub OnContactNameChanging(ByVal value As Global.System.String)
		End Sub
		Partial Private Sub OnContactNameChanged()
		End Sub

		''' <summary>
		''' No Metadata Documentation available.
		''' </summary>
		<EdmScalarPropertyAttribute(EntityKeyProperty:=False, IsNullable:=True), DataMemberAttribute()> _
		Public Property OrderDate() As Global.System.DateTime?
			Get
				Return _OrderDate
			End Get
			Set(ByVal value? As System.DateTime)
				OnOrderDateChanging(value)
				ReportPropertyChanging("OrderDate")
				_OrderDate = StructuralObject.SetValidValue(value)
				ReportPropertyChanged("OrderDate")
				OnOrderDateChanged()
			End Set
		End Property
		Private _OrderDate? As Global.System.DateTime
		Partial Private Sub OnOrderDateChanging(ByVal value? As Global.System.DateTime)
		End Sub
		Partial Private Sub OnOrderDateChanged()
		End Sub

		#End Region

	End Class

	#End Region

End Namespace
